<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Writings.</title>
    <link>https://wenyun-tan.github.io/blog/posts/</link>
    <description>Writings. (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jun 2020 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://wenyun-tan.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Test: Consultant == Coder</title>
      <link>https://wenyun-tan.github.io/blog/posts/03-personal-projects-python/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenyun-tan.github.io/blog/posts/03-personal-projects-python/</guid>
      <description>&lt;p&gt;As a strategy consultant focused on digital, I&amp;rsquo;m constantly amazed by how quickly and how much digital innovations have shaped our lives. Could you imagine going through COVID-19 lockdown with nothing but an analog telephone or snail mail? Anyhow, over the last few years, I&amp;rsquo;ve developed a deeper interest in what makes all things digital possible. Step 1 - how do you get a computer to do what you want it to?&lt;/p&gt;
&lt;p&gt;Understanding this requires getting into the thick of things - quite literally, swimming in rows of code that at first glance, looks like systematic gibberish. A daunting prospect, perhaps, for many of us. But &lt;em&gt;just think about this&lt;/em&gt;: Many years ago when blogger and livejournal were still in vogue, everyone must have done this at least once - tinkering their template&amp;rsquo;s base code. A process of iterative trial and error as we parsed through all that HTML, changing colours, pictures, layouts, to whatever suited our fancy. So, go uncover that enterprising spirit of yours and &lt;strong&gt;dive right into it!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not going to offer a tutorial here, or a summary of the &amp;ldquo;top 10 basic principles of Python&amp;rdquo;, cause I&amp;rsquo;m insufficiently equipped to do either. There are people who have already done an excellent job out there and share these amazing resources for free. A short plug here for my &lt;a href=&#34;https://www.coursera.org/learn/learn-to-program&#34;&gt;Cousera course&lt;/a&gt;, course material from &lt;a href=&#34;http://www.kosbie.net/cmu/spring-20/15-112/schedule.html&#34;&gt;Carnegie Mellon&lt;/a&gt;, and also my two excellent friends who generously shared their expertise and time while looking at my rudimentary code (hello &lt;a href=&#34;https://blog.jiayu.co/&#34;&gt;JY&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In these two weeks of fairly intensive coding - &lt;em&gt;GitHub is pleased that I have suddenly made 10 contributions within two days in June, given that I made absolutely zero commits since starting the account 2 years ago&lt;/em&gt; - I&amp;rsquo;ve found that picking up coding is not as challenging as it seems. More interestingly, I believe there are strong parallels between consulting and coding, and I hope this encourages more people in our industry to give it a try. The common stereotype of the outspoken, assertive (bordering aggressive at times) strategy consultant couldn&amp;rsquo;t be more different than the introverted, reserved coder who would much rather be left to his own devices than have to talk to people. (Not saying that these stereotypes are true, just seeking to illustrate that people do perceive these roles quite differently.)&lt;/p&gt;
&lt;p&gt;But the essence of a successful coder and consultant is the same: a strong problem-solver&amp;rsquo;s mindset, and a dogged determination to get to the bottom of everything. Learning to code is very much like training to become a strategy consultant -&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Speaking a new language&lt;/strong&gt;
We learn the jargon and speech of our clients, to better understand the industry, the company, its products, and also enable communication at a common frequency as the engagement progresses. Likewise, learning to code is just like learning a new language. We learn its terminologies, its rules, and its patterns. Just that in this case, your client is a highly responsive program that immediately tells you if you understood it right.&lt;/p&gt;
&lt;p&gt;Probably much easier than trying to read the minds of your clients sometimes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Breaking down the problem&lt;/strong&gt;
How do you get your program to do what you want it to do? You first have your objective in mind. You then break it down into bite-sized chunks that very clearly lay out your approach to achieving the objective. For each chunk, you develop an initial idea on what you think is the piece of code required to execute the action you are looking for. And you give it a try! If it doesn&amp;rsquo;t, you tweak your initial idea and figure out what&amp;rsquo;s next.&lt;/p&gt;
&lt;p&gt;Taking a step back - doesn&amp;rsquo;t this feel uncannily similar to a problem tree? And for each part of the problem tree, you develop a sub-hypothesis on what makes sense, and you test it. Quite often, I&amp;rsquo;ve found planning my codes to be quite a liberating exercise: there&amp;rsquo;s no one correct answer. (Though there is usually a preferred answer that achieves the objective in simple, concise code that a third-party could easily pick up.) There could be many different approaches to writing the program, based on how you break down your problem differently. Why not practise your problem-solving in a different context?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Learning on the job&lt;/strong&gt;
Being a strategy consultant in this day and age is an amazing thing. Why? Other than the back-of-the-envelope calculations during interviews and (maybe) some client discussions, Microsoft Excel&amp;rsquo;s got your back. Even better - if you don&amp;rsquo;t know how to do something on Excel, Google is swiftly on its way to assist.&lt;/p&gt;
&lt;p&gt;And this is exactly how many of us have built our Excel competencies - through trial and error, through searching and trawling through solutions online, in order to build models or analyses as they arise in our engagements. We are often learning on the job - and this steep learning curve is something that excites and motivates many of us (or maybe just me).&lt;/p&gt;
&lt;p&gt;Coding is exactly the same - once you nail the basics, your ship has set sail. You learn by starting to build something - maybe a mini sudoku program, or a telegram bot - and you figure your way there, step by step. It&amp;rsquo;s a process of discovery, fuelled by an eagerness to produce something tangible that can do what you want it to. And as you progress, you start thinking of new features / functionalities you will like, and the process of discovery continues.&lt;/p&gt;
&lt;p&gt;If you found the above monologue sufficiently convincing - that coding is not rocket science - I hope you will give it a go! Personally, as a strategy consultant, I firmly believe that being able to write code is the next big step, and a highly essential one, as we interact with much more substantial datasets and more creative ways to present our insights. Who knows - one day we wouldn&amp;rsquo;t be presenting on slides, but presenting with interactive visualisations that could allow us to roll through 50 different scenarios in real-time!&lt;/p&gt;
&lt;p&gt;Till then.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Peeling away the curtain on poverty in Singapore</title>
      <link>https://wenyun-tan.github.io/blog/posts/01-book-review/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenyun-tan.github.io/blog/posts/01-book-review/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re Singaporean - read this book. If you live in a world where there are people who could own up to twelve cars (cue Selling Sunset), and also people who might not have a roof over their heads - read this book. You will be surprised, challenged, compelled to think, and will keep thinking.&lt;/p&gt;
&lt;p&gt;This is Part 1 of my quest to read more Singaporean literature (fiction and non-fiction alike). After hearing so much about Teo You Yenn&amp;rsquo;s much raved about book &amp;ldquo;This Is What Inequality Looks Like&amp;rdquo; - I had to add it to the list. The verdict - a very solid five stars.&lt;/p&gt;
&lt;p&gt;But be prepared: &lt;strong&gt;reading TIWILL is uncomfortable.&lt;/strong&gt; It offers not only a level of scrutiny over the lives of a group of people often considered &amp;ldquo;invisible&amp;rdquo;, but also a deep examination into the values and preconceptions of the reader. The book achieves the same effect that I believe Parasite did for many viewers - introducing an undercurrent of thinking, generating more thoughts with yet another observation of something (an object, a person, an activity). Previously innocuous, but now laden with meaning.&lt;/p&gt;
&lt;p&gt;TIWILL is very much a collection of vignettes - providing a peek into multiple dimensions of the lives of the low-income. Teo has (quite consciously, I believe) avoided dramatising these differences - instead, she invites you to step into the smallness, but also the warmth, of the homes of a socio-economic group that is often swept under the carpet. As the reader is immersed in the physical, mental, and emotional spaces in which the low-income operate in daily, he/she is inadvertently forced to challenge his/her understanding (and/or stereotypes) around what poverty looks like, what drives poverty, and why poverty is so difficult to change / eradicate.&lt;/p&gt;
&lt;p&gt;TIWILL doesn&amp;rsquo;t offer answers to how the situation for lower-income individuals can be improved - it is, after all, highly complex (something which readers will better appreciate by the end of the book) and this book is not written with the purpose of directing / defining policy. But TIWILL provides exactly the first step we need: to start thinking about who we are, who we &lt;em&gt;want&lt;/em&gt; to be, what we want &lt;em&gt;our society&lt;/em&gt; to be.&lt;/p&gt;
&lt;p&gt;As Teo writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We who have the power to make choices disproportionately shape outcomes and limit options for those people who don&amp;rsquo;t have the power to make choices.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are on Goodreads, the same review can be found &lt;a href=&#34;https://www.goodreads.com/review/show/3341040591?book_show_action=false&amp;amp;from_review_page=1&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Surgery on the brain of a neurosurgeon</title>
      <link>https://wenyun-tan.github.io/blog/posts/02-book-review/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wenyun-tan.github.io/blog/posts/02-book-review/</guid>
      <description>&lt;p&gt;I try not to give away too much on my book reviews (especially since they go onto Goodreads and qualifying everything with &lt;em&gt;spoilers&lt;/em&gt; is a chore). But I especially loved this very personal journey into the mind of one of Britain&amp;rsquo;s greatest neurosurgeons - his triumphs, his failures, and the emotional turmoil behind the scenes.&lt;/p&gt;
&lt;p&gt;This was a very refreshing genre for me - I&amp;rsquo;ve had my fair share of medical TV dramas but not dived into books like these. Another major draw is the context in which this book is situated - the field of neurosurgery, which is still very much a fascinating black box.&lt;/p&gt;
&lt;p&gt;Henry Marsh writes wonderfully: he has a strong and distinctive voice that tells you as it is - not only about his experiences, but also who he is as a person, unabashedly. (Whether you think you might like the man as a friend or colleague is a separate matter altogether.)&lt;/p&gt;
&lt;p&gt;Through this very real and personal account, Marsh achieves the objective he established at the beginning of the book - reminding us as readers that doctors are not as superhuman as we make them to be, and they too go through very human challenges.&lt;/p&gt;
&lt;p&gt;P.S. A very timely read as our medical workers on the frontlines are working tirelessly and doing their best to keep us all safe in COVID-19 times. Show your appreciation where you can!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>